name: Grats.Api CI

on: [push]

env:
  GRATS_API_PROJECT: Grats.Api/Gratify.Grats.Api.csproj
  GRATS_API_TEST_PROJECT: Grats.Api.Test/Gratify.Grats.Api.Test.csproj
  RESOURCE_GROUP_NAME: Gratify

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - name: Check out source
      uses: actions/checkout@v1

    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.100

    - name: Restore Grats.Api.Test
      run: |
        dotnet restore ${{env.GRATS_API_TEST_PROJECT}}

    - name: Build Grats.Api.Test
      run: |
        dotnet build ${{env.GRATS_API_TEST_PROJECT}} \
          --configuration Release \
          --no-restore

    - name: Test Grats.Api.Test
      run: |
        dotnet test ${{env.GRATS_API_TEST_PROJECT}} \
          --configuration Release \
          --no-build

    - name: Publish Grats.Api
      run: |
        dotnet publish ${{env.GRATS_API_PROJECT}} \
          --output ${{env.DOTNET_ROOT}}/app \
          --configuration Release \
          --no-build

    - name: Login to Azure
      if: github.ref == 'refs/heads/master'
      uses: azure/login@v1
      with:
        creds: ${{secrets.AZURE_CREDENTIALS}}

    - name: Create resource group
      if: github.ref == 'refs/heads/master'
      uses: azure/CLI@v1
      with:
        azcliversion: 2.0.72
        inlineScript: |
          az group create \
            --verbose \
            --location northeurope \
            --name ${{env.RESOURCE_GROUP_NAME}}

    - name: Deploy ARM template
      if: github.ref == 'refs/heads/master'
      uses: azure/CLI@v1
      with:
        azcliversion: 2.0.72
        inlineScript: |
          az group deployment create \
            --verbose \
            --resource-group ${{env.RESOURCE_GROUP_NAME}} \
            --template-file arm-template.json

    - name: 'Deploy Grats.Api'
      if: github.ref == 'refs/heads/master'
      uses: azure/webapps-deploy@v1
      with:
        app-name: grats-api
        package: ${{env.DOTNET_ROOT}}/app
